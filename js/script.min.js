function onMove(e) {
    lastMouse.x = e.clientX, lastMouse.y = e.clientY, requestTick()
}

function requestTick() {
    ticking || pauseRender || (requestAnimationFrame(render), ticking = !0)
}

function render() {
    var e = (lastMouse.x - mouse.center.x) / 30,
        t = (lastMouse.y - mouse.center.y) / 30;
    mouse.tilts && mouse.tilts.forEach(function(s) {
        if (!s.parentNode.classList.contains("move")) {
            var i = parseFloat(s.getAttribute("data-tilt"));
            s.style.transform = s.style.webkitTransform = "rotateX(" + t * i + "deg) rotateY(" + e * i + "deg)"
        }
    }), mouse.moves && mouse.moves.forEach(function(s) {
        var i = parseFloat(s.getAttribute("data-mouse")),
            n = s.getAttribute("data-rotate"),
            o = "";
        n && (o += "rotate(" + n + ") "), "x" == s.getAttribute("data-axis") ? o += "translateX(" + e * i + "px)" : o += "translate(" + e * i + "px, " + t * i + "px)", s.style.transform = s.style.webkitTransform = o
    }), ticking = !1
}
window.$$ = new function() {
    return this.first = function(e) {
        return document.body.querySelector(e)
    }, this.all = function(e) {
        return document.body.querySelectorAll(e)
    }, this.id = function(e) {
        return document.getElementById(e)
    }, this.tag = function(e) {
        return document.getElementsByTagName(e)[0]
    }, this.ready = function(e) {
        document.addEventListener("DOMContentLoaded", e)
    }, this.ajax = new function() {
        var e = this;
        return this.get = function(t) {
            return e.xhttp = new XMLHttpRequest, e.xhttp.open("GET", t, !0), e.xhttp.send(), e.promise
        }, this.promise = new function() {
            return this.then = function(t) {
                e.xhttp.onreadystatechange = function() {
                    4 == this.readyState && t(this.responseText)
                }
            }, this
        }, this
    }, this.timeout = function(e, t) {
        function s(o) {
            null === i && (i = o), o - i < e ? n(s) : t()
        }
        var i = null,
            n = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
        n(s)
    }, this
}, HTMLElement.prototype.on = function(e, t) {
    this.addEventListener(e, t)
}, HTMLElement.prototype.removeChildren = function() {
    for (; this.firstChild;) this.removeChild(this.firstChild)
}, HTMLElement.prototype.delete = function() {
    this.parentNode.removeChild(this)
}, NodeList.prototype.forEach = Array.prototype.forEach, HTMLElement.prototype.get = function(e) {
    return this.querySelector(e)
}, HTMLElement.prototype.getAll = function(e) {
    return this.querySelectorAll(e)
}, NodeList.prototype.forEach = Array.prototype.forEach;
var isTouch = window.innerWidth <= 768,
    init = {},
    destroy = {},
    page = {
        bol: !1,
        links: $$.all("#sidebar a"),
        init: function() {
            page.count(), page.bind(), window.onpopstate = page.change
        },
        href: function(e) {
            e.preventDefault();
            for (var t = e.target, s = 3; s--;) "A" != t.nodeName && (t = t.parentNode);
            window.location.href != t.href ? page.go2(t.href) : menu.close()
        },
        go2: function(e) {
            page.oldIndex = page.index, history.pushState(null, null, e), this.change()
        },
        change: function() {
            page.bol || (page.bol = !0, page.url = window.location.href, page.call())
        },
        call: function() {
            page.destroy(), $$.ajax.get(page.url).then(function(e) {
                page.count(), page.create(e), page.delete(), page.bind()
            })
        },
        destroy: function() {
            menu.close(), logo.pageNeg = !1;
            var e = $$.first(".volet").id;
            (e = e.replace(/-/g, "_")) in destroy && destroy[e]()
        },
        create: function(e) {
            var t = document.createElement("div");
            t.innerHTML = e, this.new = t.get(".volet"), this.new.className = "volet in", document.body.className = this.index > this.oldIndex ? "up" : "down", document.title = t.get("title").textContent, document.body.appendChild(this.new)
        },
        delete: function() {
            var e = $$.first(".volet");
            e.className = "volet out", $$.timeout(500, function() {
                document.body.scrollTo(0, 0)
            }), $$.timeout(1e3, function() {
                document.body.removeChild(e), page.bol = !1, page.new.className = "volet", document.body.className = ""
            })
        },
        bind: function(e) {
            var t = this.new ? this.new.id : $$.first(".volet").id;
            t = t.replace(/-/g, "_"), t in init && init[t](), nav.enable(), titre.init(), logo.pageNeg ? logo.neg() : logo.reset()
        },
        count: function() {
            var e = /[a-z-]+$/.exec(window.location.href) || "",
                t = [];
            for (var s in this.links) t.push(this.links[s].pathname);
            this.index = t.indexOf("/" + e), menu.set(), sidebar.set()
        }
    };
$$.ready(page.init);
var vous = {
    init: function() {
        this.bol = !1, this.slides = $$.all(".tile"), this.imgs = $$.all(".tiles>img"), this.wrapper = $$.first(".tiles"), this.tilesWrapper = $$.first(".tilesWrapper"), this.bullets = $$.all("#bullets div"), this.mobile.index = 0
    }
};
vous.desktop = {
    move: function(e) {
        vous.bol || window.innerWidth < 700 || (this.index = parseInt(e.className.substr(-1)), this.index -= 2, this.index && this.add())
    },
    add: function() {
        if (vous.desktop.bol = !0, 1 == this.index) {
            var e = $$.first(".p1").cloneNode(!0);
            e.className = "tile p4", vous.wrapper.className = "tiles r"
        } else if (-1 == this.index) {
            var e = $$.first(".p3").cloneNode(!0);
            e.className = "tile p0", vous.wrapper.className = "tiles l"
        }
        vous.tilesWrapper.appendChild(e), $$.timeout(1, function() {
            vous.desktop.change.tiles(), vous.desktop.change.imgs()
        })
    },
    change: {
        tiles: function() {
            for (var e = $$.all(".tile"), t = e.length; t--;) {
                var s = parseInt(e[t].className.substr(-1));
                e[t].className = "tile p" + (s - vous.desktop.index)
            }
        },
        imgs: function() {
            for (var e = vous.imgs.length; e--;) {
                var t = parseInt(vous.imgs[e].className.substr(-1));
                t = (t - vous.desktop.index + 3) % 3, vous.imgs[e].className = "i" + t
            }
            $$.timeout(300, vous.desktop.delete)
        }
    },
    delete: function() {
        ($$.first(".p0") || $$.first(".p4")).delete(), vous.wrapper.className = "tiles", vous.desktop.bol = !1
    }
}, vous.mobile = {
    go2: function(e) {
        if (!(vous.bol || window.innerWidth > 700)) {
            this.index = e;
            for (var t = vous.slides.length; t--;) t < e ? (vous.slides[t].className = "tile left", vous.imgs[t].className = "left", vous.bullets[t].className = "") : t > e ? (vous.slides[t].className = "tile right", vous.imgs[t].className = "right", vous.bullets[t].className = "") : (vous.slides[t].className = "tile", vous.imgs[t].className = "", vous.bullets[t].className = "on");
            $$.timeout(600, function() {
                vous.bol = !1
            })
        }
    },
    start: function(e) {
        this.offset = e.touches[0].pageX
    },
    change: function(e) {
        var t = e.touches[0].pageX - this.offset;
        t > 100 && this.index - 1 > -1 ? (this.go2(this.index - 1), vous.bol = !0) : t < -100 && this.index + 1 < vous.slides.length && (this.go2(this.index + 1), vous.bol = !0)
    }
}, init.vous = function() {
    vous.init(), mouse.start()
};
var contact = {
    init: function() {
        this.index = -1, this.car = $$.id("carousel"), this.imgs = this.car.getAll(".img"), this.copyright(), $$.timeout(500, function() {
            contact.next()
        })
    },
    next: function() {
        var e = this.imgs.length;
        for (this.index = (this.index + 1 + e) % e; e--;) this.imgs[e].className = e == this.index ? "img on" : "img"
    },
    copyright: function() {
        var e = new Date;
        e.getFullYear > 2017 && ($$.id("copyright").textContent = e.getFullYear())
    }
};
init.contact = function() {
    contact.init(), mouse.start()
};
var croy = {
    init: function() {
        this.index = null, this.stopped = !1, this.untouched = !0, this.pts = $$.all(".pt"), this.svg = $$.first(".croyances svg"), this.imgs = $$.all(".croyances image"), this.losange = $$.first(".croyances .losange"), $$.timeout(500, function() {
            croy.select(0), croy.autoplay(6e3)
        })
    },
    destroy: function() {
        this.stopped = !0
    },
    autoplay: function(e) {
        this.timeout = $$.timeout(e, function() {
            croy.untouched && (croy.index = (croy.index + 1) % 3, croy.select(croy.index), croy.stopped || croy.autoplay(e))
        })
    },
    select: function(e, t) {
        t && (this.untouched = !1, t.classList.contains("on")) || (this.index = e, this.reset(), this.losange.className = "losange p" + (e + 1), $$.timeout(300, function() {
            croy.pts[e].classList.add("on"), croy.imgs[e].setAttribute("class", "on"), $$.timeout(200, function() {
                croy.svg.setAttribute("class", "")
            })
        }))
    },
    reset: function() {
        this.svg.setAttribute("class", "out");
        for (var e = this.pts.length; e--;) this.pts[e].classList.remove("on"), this.imgs[e].setAttribute("class", "")
    }
};
init.home = function() {
    mouse.start(), "first" != document.body.className ? croy.init() : (page.bol = !0, $$.timeout(3e3, function() {
        page.bol = !1, croy.init()
    }))
}, destroy.home = function() {
    croy.destroy()
};
var logo = {
        l: $$.id("logo"),
        neg: function() {
            this.l.className = "neg"
        },
        reset: function() {
            this.l.className = ""
        }
    },
    menu = {
        m: $$.id("menu"),
        links: $$.all("#menu a"),
        arts: $$.id("arts"),
        toggle: function() {
            this.m.className ? this.close() : this.open()
        },
        open: function() {
            this.m.className = "open", nav.unable(), logo.neg(), touchScroll.disable()
        },
        close: function() {
            this.m.className = "", nav.enable(), logo.pageNeg ? logo.neg() : logo.reset(), touchScroll.enable()
        },
        set: function() {
            sidebar.set.call(this)
        },
        bleu: function() {
            this.m.className = "bleu"
        },
        hover: function(e) {
            e = e.parentNode;
            var t = e.parentNode.children,
                s = Array.prototype.indexOf.call(t, e);
            this.arts.className = "arts" + (s + 1)
        }
    };
window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
var lastMouse = {},
    ticking = !1,
    pauseRender = !1,
    mouse = {
        init: function() {
            this.resize(), window.addEventListener("resize", this.resize)
        },
        start: function() {
            this.moves = $$.all("[data-mouse]"), this.tilts = $$.all("[data-tilt]")
        },
        resize: function() {
            mouse.center = {
                x: window.innerWidth / 2,
                y: window.innerHeight / 2
            }
        }
    };
document.addEventListener("DOMContentLoaded", function() {
    isTouch || (mouse.init(), window.addEventListener("mousemove", onMove, !1))
});
var nav = {
    int: 0,
    enabled: !0,
    init: function() {
        window.addEventListener("mousewheel", this.scroll), window.addEventListener("DOMMouseScroll", this.scroll), window.addEventListener("keydown", this.arrows)
    },
    enable: function() {
        this.enabled = !0
    },
    unable: function() {
        this.enabled = !1
    },
    move: function(e) {
        this.enabled && (this.int = 0, 1 == page.index ? this.besoins(e) : e + 1 && page.links[e] && page.go2(page.links[e].href))
    },
    besoins: function(e) {
        besoins.bol || page.bol || (besoins.index + e == 0 ? page.go2(page.links[e].href) : besoins.index + e > 4 ? page.go2(page.links[e].href) : besoins.move(e - 1))
    }
};
nav.scroll = function(e) {
    var t = e.wheelDelta || -e.detail;
    t = t > 0 ? -1 : 1, page.bol || (nav.int += t, nav.int > 10 ? nav.move(page.index + 1) : nav.int < -10 && nav.move(page.index - 1))
}, nav.arrows = function(e) {
    40 == e.keyCode ? nav.move(page.index + 1) : 38 == e.keyCode && nav.move(page.index - 1)
}, nav.init();
var duo = {
    init: function() {
        this.bios = $$.all(".bio"), this.figs = $$.all("figure")
    },
    select: function(e) {
        var t = -1 * (e - 1);
        this.bios[e].classList.add("visible"), this.bios[t].classList.remove("visible"), this.figs[e].className = "sharp", this.figs[t].className = "blur", this.figs[e].setAttribute("data-mouse", .5), this.figs[t].setAttribute("data-mouse", .25)
    }
};
init.duo = function() {
    duo.init(), menu.bleu(), mouse.start()
}, init.partners = function() {
    mouse.start()
};
var sidebar = {
        s: $$.id("sidebar"),
        links: $$.all("#sidebar a"),
        set: function() {
            for (var e = this.links.length; e--;) this.links[e].className = e == page.index ? "current" : ""
        }
    },
    titre = {
        init: function() {
            this.spans = $$.all("h1 span");
            var e = "first" == document.body.className ? 3500 : 500;
            $$.timeout(e, function() {
                titre.show()
            })
        },
        show: function() {
            for (var e = this.spans.length; e--;) this.spans[e].style.transitionDelay = this.spans[e].style.webkitTransitionDelay = e / 40 + "s", this.spans[e].style.transform = this.spans[e].style.webkitTransform = "none", this.spans[e].style.opacity = 1
        }
    },
    touchScroll = {
        detect: function() {
            this.passive = !1;
            try {
                var e = Object.defineProperty({}, "passive", {
                    get: function() {
                        touchScroll.passive = !0
                    }
                });
                window.addEventListener("test", null, e)
            } catch (e) {}
        },
        disable: function() {
            document.body.addEventListener("touchmove", this.prevent, !!this.passive && {
                passive: !1
            })
        },
        enable: function() {
            document.body.removeEventListener("touchmove", this.prevent)
        },
        prevent: function(e) {
            e.preventDefault()
        }
    };
touchScroll.detect();
var besoins = {
    fake: document.createElement("div"),
    init: function() {
        this.index = -1, this.bol = !1, this.slides = $$.all(".slide"), this.arrow = $$.first(".arrow"), this.next = $$.first("#besoins .next"), this.bg.fond = $$.first(".fond"), $$.timeout(0, function() {
            besoins.move(1)
        })
    },
    move: function(e) {
        if (!this.bol) {
            this.bol = !0, pauseRender = !0, this.index += e;
            var t = this.slides[this.index - 1] || this.fake,
                s = this.slides[this.index] || this.fake,
                i = this.slides[this.index + 1] || this.fake;
            t.className = "slide move l", s.className = "slide move", i.className = "slide move r", this.bg.close(), $$.timeout(1100, function() {
                s.className = "slide"
            }), this.mask(), $$.timeout(1500, function() {
                besoins.bol = !1, besoins.bg.change(besoins.index + 1), besoins.slides[besoins.index].className = "slide", pauseRender = !1
            })
        }
    },
    mask: function() {
        3 == this.index ? (this.arrow.className = "arrow hidden", this.next.className = "next neg") : (this.arrow.className = "arrow", this.next.className = "next neg hidden")
    },
    bg: {
        close: function() {
            this.fond.classList.add("closed")
        },
        change: function(e) {
            this.fond.className = "fond p" + e
        }
    }
};
init.besoins = function() {
    logo.pageNeg = !0, besoins.init(), mouse.start()
};
//# sourceMappingURL=script.min.js.map
